<style>
.om-ww {
  padding: 37px 0 100px 0;
  background: linear-gradient(180deg, #fff 0%, #d9eafe 100%);
  position: relative;
  z-index: 1;
}

.om-ww .om-ww-top {
  display: flex;
  gap: 5%;
}

.om-ww .om-ww-left {
  flex: 1;
}

.om-ww .om-ww-h3 {
  color: #190a0a;
  font-size: 44px;
  line-height: 1.2;
  font-weight: normal;
  font-family: var(--heading-font-family);
  margin: 0;
  margin-bottom: 15px;
}

.om-ww .om-ww-sub {
  color: #3f3636;
  font-size: 20px;
  line-height: 1.5;
  max-width: 472px;
}

.om-ww .om-ww-right {
  width: 61.8%;
  padding: 34px 55px;
  border-radius: 10px;
  border: 1px solid #feffff;
  background: linear-gradient(180deg, #d4e2f4 0%, #feffff 100%);
}

.om-ww .om-ww-top-list {
  display: flex;
  justify-content: space-between;
  gap: 10%;
}

.om-ww .om-ww-top-h4 {
  color: #190a0a;
  font-size: 26px;
  line-height: 1.2;
  margin-bottom: 5px;
}

.om-ww .om-ww-top-sub {
  color: #000;
  font-size: 16px;
  line-height: 1.2;
}

.om-ww .om-ww-p {
  color: #3f3636;
  font-size: 14px;
  line-height: 1.5;
  margin-top: 22px;
}

.om-ww .om-ww-p p {
  margin: 0;
}

.om-ww .om-ww-p strong {
  font-weight: normal;
  font-family: var(--heading-font-family);
}

.om-ww .om-ww-top-lin {
  width: 0.5px;
  background: #e0004d;
}

.om-ww .om-ww-bottom {
  margin-top: 93px;
}

.om-ww .om-ww-bottom-cont {
  position: relative;
  z-index: 1;
  transition: transform 0.6s ease-in-out;
}

.om-ww .om-ww-bottom-list {
  display: flex;
  position: relative;
  z-index: 1;
  --om-ww-offset: 0;
}

.om-ww .om-ww-bottom-list::before {
  position: absolute;
  content: '';
  width: 100%;
  height: 7px;
  background: #a0bbdc;
  bottom: -23px;
  left: 0;
  border-radius: 7px;
  z-index: 1;
}

.om-ww .om-ww-bottom-list::after {
  position: absolute;
  content: '';
  width: var(--om-ww-offset);
  height: 7px;
  background: #e0004d;
  bottom: -23px;
  left: 0;
  border-radius: 7px;
  z-index: 2;
}

.om-ww .om-ww-bottom-item {
  flex: 1;
  display: flex;
  justify-content: flex-start;
}

.om-ww .om-ww-bottom-txt {
  position: relative;
  text-align: center;
}

.om-ww .om-ww-bottom-txt::before {
  content: '';
  position: absolute;
  width: 22px;
  height: 22px;
  left: 50%;
  transform: translateX(-50%);
  bottom: -30px;
  border-radius: 50%;
  border: 1.5px solid #fff;

  background: linear-gradient(180deg, #ddd 0%, #919191 100%);
  z-index: 3;
}

.om-ww .active-o .om-ww-bottom-txt::before,
.om-ww .active-n .om-ww-bottom-txt::before {
  background: linear-gradient(180deg, #e0004d 0%, #e0004d 0.4%, #ff7595 100%);
}

.om-ww .om-ww-bottom-h4 {
  color: #000;
  font-size: 25px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  margin-bottom: 4px;
}

.om-ww .om-ww-bottom-sub {
  color: #3f3636;
  text-align: center;
  font-size: 16px;
  line-height: 1.2;
}

.om-ww .om-ww-bottom-p {
  position: absolute;
  color: #000;
  font-size: 25px;
  line-height: 1.2;
  opacity: 0.5;
  left: 50%;
  transform: translateX(-50%);
  bottom: -63px;
  white-space: nowrap;
}

.om-ww .om-ww-fd {
  width: 380px;
  height: 238px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  background: #fff;
  border-radius: 10px;
  padding: 20px 40px;
  position: relative;
  z-index: 1;
  transition: transform 0.6s ease-in-out;
}

.om-ww .om-ww-win {
  margin-top: 60px;
  opacity: 0;
  pointer-events: none;
}

.om-ww .om-ww-dw {
  position: absolute;
  bottom: 0;
  left: 0;
}

.om-ww .om-ww-fd::before {
  content: '';
  position: absolute;
  top: -28px;
  left: 20px;
  border: 15px solid transparent;
  border-color: transparent transparent #fff transparent;
}

.om-ww .om-ww-win .om-ww-fd-h3 {
  border-radius: 32px;
  background: linear-gradient(90deg, #ebd3a9 0%, #fef1da 42.79%, #ebd1a7 100%);
  display: flex;
  align-items: center;
  justify-content: center;
  color: #3f3636;
  font-size: 18px;
  line-height: 2;
  font-family: var(--heading-font-family);
  font-weight: normal;
  margin: 0;
}

.om-ww .om-ww-fd-swiper {
  color: #190a0a;
  text-align: center;
  font-size: 14px;
  line-height: 1.5;
  margin-top: 17px;
  max-height: 112px;
  overflow: hidden;
  position: relative;
  z-index: 1;
}

.om-ww .om-ww-fd-swiper::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    180deg,
    #fff 0%,
    rgba(255, 255, 255, 0) 22.98%,
    rgba(255, 255, 255, 0) 77.93%,
    #fff 100%
  );
  pointer-events: none;
  z-index: 2;
}

.om-ww .om-ww-fd-list {
  position: relative;
  z-index: 1;
}

.om-ww .om-ww-fd-swiper p {
  margin: 0;
}

.om-ww .om-ww-dw .om-ww-fd-h3 {
  color: #190a0a;
  text-align: center;
  font-size: 22px;
  line-height: 1.2;
  font-weight: normal;
  font-family: var(--heading-font-family);
  margin: 0;
  margin-bottom: 17px;
}

.om-ww .om-ww-dw-cont {
  display: flex;
  justify-content: center;
  gap: 20px;
  align-items: center;
}

.om-ww .om-ww-item {
  color: #3f3636;
  text-align: center;
  font-size: 12px;
  line-height: 1.2;
}

.om-ww .om-ww-num {
  display: flex;
  align-items: center;
  margin-bottom: 4px;
  position: relative;
  /* padding-right: 12px; */
}

.om-ww .om-ww-num svg {
  position: absolute;
  right: -12px;
  top: 50%;
  transform: translateY(-50%);
  display: block;
}

.om-ww .om-ww-dw-span {
  display: flex;
  width: 60px;
  height: 60px;
  justify-content: center;
  align-items: center;
  border-radius: 10px;
  background: #e0004d;
  color: #fff;
  font-size: 36px;
  line-height: 1;
}

.om-ww .om-ww-dw-msg {
  color: #190a0a;
  text-align: center;
  font-size: 14px;
  line-height: 1.6;
  margin-top: 11px;
}

.om-ww .om-ww-arraws {
  display: none;
}

@media (max-width: 1500px) {
  .om-ww .om-ww-top-list {
    gap: 20px;
  }

  .om-ww .om-ww-top-h4 {
    font-size: 22px;
  }

  .om-ww .om-ww-top-sub {
    font-size: 14px;
  }
}

@media (max-width: 1300px) {
  .om-ww .om-ww-bottom-h4 {
    font-size: 20px;
  }

  .om-ww .om-ww-bottom-sub {
    font-size: 14px;
  }

  .om-ww .om-ww-bottom-p {
    font-size: 20px;
    bottom: -60px;
  }

  .om-ww .om-ww-fd {
    padding: 20px;
    width: 320px;
    height: 200px;
  }

  .om-ww .om-ww-win .om-ww-fd-h3 {
    font-size: 16px;
  }

  .om-ww .om-ww-fd-swiper {
    font-size: 12px;
    max-height: 100px;
  }

  .om-ww .om-ww-dw .om-ww-fd-h3 {
    font-size: 18px;
  }
  .om-ww .om-ww-dw-span {
    width: 50px;
    height: 50px;
    font-size: 28px;
  }
  .om-ww .om-ww-dw-msg {
    font-size: 12px;
  }
}

@media (max-width: 1100px) {
  .om-ww {
    overflow: hidden;
  }

  .om-ww .om-ww-bottom-list::before {
    min-width: 879px;
  }
  .om-ww .om-ww-bottom-item {
    justify-content: center;
    min-width: 293px;
    flex-shrink: 0;
  }
  .om-ww .om-ww-bottom-h4 {
    font-size: 18px;
  }

  .om-ww .om-ww-bottom-sub {
    font-size: 12px;
  }

  .om-ww .om-ww-bottom-p {
    font-size: 25px;
    bottom: -75px;
  }

  .om-ww .om-ww-fd {
    padding: 20px 12px;
    width: 283px;
    height: 178px;
  }

  .om-ww .om-ww-win {
    margin-top: 50px;
  }

  .om-ww .om-ww-win .om-ww-fd-h3 {
    font-size: 14px;
    line-height: 2.3;
  }

  .om-ww .om-ww-dw .om-ww-fd-h3 {
    font-size: 16px;
  }

  .om-ww .om-ww-fd-swiper {
    font-size: 14px;
    max-height: 90px;
    margin-top: 10px;
  }

  .om-ww .om-ww-dw-span {
    width: 45px;
    height: 45px;
    font-size: 27px;
    border-radius: 7.5px;
  }

  .om-ww .om-ww-dw-msg {
    margin-top: 5px;
  }

  .om-ww .om-ww-fd::before {
    left: 50%;
    transform: translateX(-50%);
  }

  .om-ww .om-ww-bottom-txt::before {
    width: 15px;
    height: 15px;
    bottom: -27px;
  }

  .om-ww .om-ww-arraws {
    margin-top: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 36px;
  }
  .om-ww .om-ww-arraws svg {
    width: 30px;
    height: auto;
    cursor: pointer;
  }
}

@media (max-width: 991px) {
  .om-ww {
    padding-bottom: 50px;
  }

  .om-ww .om-ww-top {
    gap: 38px;
    flex-direction: column;
  }

  .om-ww .om-ww-h3 {
    font-size: 24px;
    text-align: center;
  }

  .om-ww .om-ww-sub {
    font-size: 12px;
    max-width: 100%;
    text-align: center;
  }

  .om-ww .om-ww-right {
    width: 100%;
    padding: 25px 16px;
  }

  .om-ww .om-ww-top-list {
    gap: 16px;
  }

  .om-ww .om-ww-top-h4 {
    font-size: 16px;
  }

  .om-ww .om-ww-top-sub {
    font-size: 12px;
  }

  .om-ww .om-ww-p {
    font-size: 12px;
    margin-top: 19px;
  }
  .om-ww .om-ww-bottom{
    margin-top:46px;
  }
}
</style>
<section class="section-box">
    <div class="om-ww">
    <div class="container">
      <div class="om-ww-top">
        <div class="om-ww-left">
            {%- if section.settings.text != blank -%}
                <h3 class="om-ww-h3">{{ section.settings.text }}</h3>
            {%- endif -%}
            {%- if section.settings.text1 != blank -%}
                <div class="om-ww-sub">{{ section.settings.text1 }}</div>
            {%- endif -%}
        </div>
        <div class="om-ww-right">
          <div class="om-ww-top-list">
            {%- if section.settings.text2 != blank or section.settings.text3 != blank -%}
                <div class="om-ww-top-item">
                    {%- if section.settings.text2 != blank -%}
                        <h4 class="om-ww-top-h4">{{ section.settings.text2 }}</h4>
                    {%- endif -%}
                    {%- if section.settings.text3 != blank -%}
                        <div class="om-ww-top-sub">{{ section.settings.text3 }}</div>
                    {%- endif -%}
                </div>
            {%- endif -%}
            {%- if section.settings.text4 != blank or section.settings.text5 != blank -%}
                <span class="om-ww-top-lin"></span>
                <div class="om-ww-top-item">
                    {%- if section.settings.text4 != blank -%}
                        <h4 class="om-ww-top-h4">{{ section.settings.text4 }}</h4>
                    {%- endif -%}
                    {%- if section.settings.text5 != blank -%}
                        <div class="om-ww-top-sub">{{ section.settings.text5 }}</div>
                    {%- endif -%}
                </div>
            {%- endif -%}
            {%- if section.settings.text6 != blank or section.settings.text7 != blank -%}
                <span class="om-ww-top-lin"></span>
                <div class="om-ww-top-item">
                    {%- if section.settings.text6 != blank -%}
                        <h4 class="om-ww-top-h4">{{ section.settings.text6 }}</h4>
                    {%- endif -%}
                    {%- if section.settings.text7 != blank -%}
                        <div class="om-ww-top-sub">{{ section.settings.text7 }}</div>
                    {%- endif -%}
                </div>
            {%- endif -%}
          </div>
            {%- if section.settings.text8 != blank -%}
                <div class="om-ww-p">
                    {{ section.settings.text8 }}
                </div>
            {%- endif -%}
        </div>
      </div>
      <div class="om-ww-bottom">
        <div class="om-ww-bottom-cont">
          <div class="om-ww-bottom-list">
            {%- for block in section.blocks -%}
                <div class="om-ww-bottom-item" data-time="{{ block.settings.text3 }}">
                    <div class="om-ww-bottom-txt">
                        {%- if block.settings.text != blank -%}
                            <h4 class="om-ww-bottom-h4">{{ block.settings.text }}</h4>
                        {%- endif -%}
                        {%- if block.settings.text1 != blank -%}
                            <div class="om-ww-bottom-sub">{{ block.settings.text1 }}</div>
                        {%- endif -%}
                        {%- if block.settings.text2 != blank -%}
                            <div class="om-ww-bottom-p">{{ block.settings.text2 }}</div>
                        {%- endif -%}
                    </div>
                </div>
            {%- endfor -%}
          </div>
          <div class="om-ww-fd om-ww-win">
            {%- if section.settings.text9 != blank -%}
                <h3 class="om-ww-fd-h3">{{ section.settings.text9 }}</h3>
            {%- endif -%}
            <div class="om-ww-fd-swiper">
              <div class="om-ww-fd-list">
                {{ section.settings.text10 }}
              </div>
            </div>
          </div>
          <div class="om-ww-fd om-ww-dw">
            {%- if section.settings.text11 != blank -%}
                <h3 class="om-ww-fd-h3">{{ section.settings.text11 }}</h3>
            {%- endif -%}
            <div class="om-ww-dw-cont">
              <div class="om-ww-item">
                <div class="om-ww-num">
                  <div class="om-ww-dw-span om-ww-d">00</div>
                  <svg xmlns="http://www.w3.org/2000/svg" width="4" height="19" viewBox="0 0 4 19" fill="none">
                    <path
                      d="M2.28142 4.3231C3.20595 4.3231 3.95542 3.57362 3.95542 2.6491C3.95542 1.72457 3.20595 0.975098 2.28142 0.975098C1.3569 0.975098 0.607422 1.72457 0.607422 2.6491C0.607422 3.57362 1.3569 4.3231 2.28142 4.3231Z"
                      fill="#3F3636" />
                    <path
                      d="M2.28142 18.1922C3.20595 18.1922 3.95542 17.4427 3.95542 16.5182C3.95542 15.5937 3.20595 14.8442 2.28142 14.8442C1.3569 14.8442 0.607422 15.5937 0.607422 16.5182C0.607422 17.4427 1.3569 18.1922 2.28142 18.1922Z"
                      fill="#3F3636" />
                  </svg>
                </div>
                Days
              </div>
              <div class="om-ww-item">
                <div class="om-ww-num">
                  <div class="om-ww-dw-span om-ww-h">00</div>
                  <svg xmlns="http://www.w3.org/2000/svg" width="4" height="19" viewBox="0 0 4 19" fill="none">
                    <path
                      d="M2.28142 4.3231C3.20595 4.3231 3.95542 3.57362 3.95542 2.6491C3.95542 1.72457 3.20595 0.975098 2.28142 0.975098C1.3569 0.975098 0.607422 1.72457 0.607422 2.6491C0.607422 3.57362 1.3569 4.3231 2.28142 4.3231Z"
                      fill="#3F3636" />
                    <path
                      d="M2.28142 18.1922C3.20595 18.1922 3.95542 17.4427 3.95542 16.5182C3.95542 15.5937 3.20595 14.8442 2.28142 14.8442C1.3569 14.8442 0.607422 15.5937 0.607422 16.5182C0.607422 17.4427 1.3569 18.1922 2.28142 18.1922Z"
                      fill="#3F3636" />
                  </svg>
                </div>
                Hrs
              </div>
              <div class="om-ww-item">
                <div class="om-ww-num">
                  <div class="om-ww-dw-span om-ww-m">00</div>
                  <svg xmlns="http://www.w3.org/2000/svg" width="4" height="19" viewBox="0 0 4 19" fill="none">
                    <path
                      d="M2.28142 4.3231C3.20595 4.3231 3.95542 3.57362 3.95542 2.6491C3.95542 1.72457 3.20595 0.975098 2.28142 0.975098C1.3569 0.975098 0.607422 1.72457 0.607422 2.6491C0.607422 3.57362 1.3569 4.3231 2.28142 4.3231Z"
                      fill="#3F3636" />
                    <path
                      d="M2.28142 18.1922C3.20595 18.1922 3.95542 17.4427 3.95542 16.5182C3.95542 15.5937 3.20595 14.8442 2.28142 14.8442C1.3569 14.8442 0.607422 15.5937 0.607422 16.5182C0.607422 17.4427 1.3569 18.1922 2.28142 18.1922Z"
                      fill="#3F3636" />
                  </svg>
                </div>
                Mins
              </div>
              <div class="om-ww-item">
                <div class="om-ww-num">
                  <div class="om-ww-dw-span om-ww-s">00</div>
                </div>
                Secs
              </div>
            </div>
            {%- if section.settings.text12 != blank -%}
                <div class="om-ww-dw-msg">{{ section.settings.text12 }}</div>
            {%- endif -%}
          </div>
        </div>
        <div class="om-ww-arraws">
          <div class="om-ww-btn-prev">
            <svg xmlns="http://www.w3.org/2000/svg" width="30" height="23" viewBox="0 0 30 23" fill="none">
              <g clip-path="url(#clip0_4923_5823)">
                <path
                  d="M1.90735e-06 11.4924C1.90735e-06 11.6739 0.067318 11.8539 0.196098 11.9915L10.44 22.9671L11.5098 21.969L2.41463 12.2242H30C30 11.4164 29.3444 10.7607 28.5366 10.7607H0.765366C0.488781 10.7607 0.219515 10.8998 0.0878067 11.1442C0.0278072 11.2539 1.90735e-06 11.3739 1.90735e-06 11.4924Z"
                  fill="#190A0A" />
                <path
                  d="M1.53121 8.92683C2.10341 9.49756 3.02975 9.49756 3.60048 8.92683L11.4941 1.03463L10.4595 0L1.53268 8.92683H1.53121Z"
                  fill="#190A0A" />
              </g>
              <defs>
                <clipPath id="clip0_4923_5823">
                  <rect width="30" height="22.9683" fill="white" transform="matrix(-1 0 0 1 30 0)" />
                </clipPath>
              </defs>
            </svg>
          </div>
          <div class="om-ww-btn-next">
            <svg xmlns="http://www.w3.org/2000/svg" width="30" height="23" viewBox="0 0 30 23" fill="none">
              <g clip-path="url(#clip0_4923_5819)">
                <path
                  d="M30 11.4924C30 11.6739 29.9327 11.8539 29.8039 11.9915L19.56 22.9671L18.4902 21.969L27.5854 12.2242H0C0 11.4164 0.65561 10.7607 1.46341 10.7607H29.2346C29.5112 10.7607 29.7805 10.8998 29.9122 11.1442C29.9722 11.2539 30 11.3739 30 11.4924Z"
                  fill="#190A0A" />
                <path
                  d="M28.4688 8.92683C27.8966 9.49756 26.9702 9.49756 26.3995 8.92683L18.5059 1.03463L19.5405 0L28.4673 8.92683H28.4688Z"
                  fill="#190A0A" />
              </g>
              <defs>
                <clipPath id="clip0_4923_5819">
                  <rect width="30" height="22.9683" fill="white" />
                </clipPath>
              </defs>
            </svg>
          </div>
        </div>
      </div>

    </div>
  </div>
</section>
<script>
  function handleOmWw(parentSelector = ".om-ww") {
    const parent = document.querySelector(parentSelector);
    if (!parent) return;

    const items = parent.querySelectorAll(".om-ww-bottom-item");
    if (!items.length) return;

    const now = new Date();
    let firstFuture = null;

    // 1. 遍历 items，判断时间并加 class
    items.forEach((item) => {
    const timeStr = item.dataset.time;
    if (!timeStr) return;

    const itemTime = new Date(timeStr);

    if (itemTime < now) {
        item.classList.add("active-o"); // 过去时间
    } else {
        if (!firstFuture) {
        item.classList.add("active-n"); // 第一个未来时间
        firstFuture = item;
        } else {
        item.classList.add("active-d"); // 剩下的未来时间
        }
    }
    });

    // 2. 获取第一个 active-d 的 left 偏移
    let firstActiveD = parent.querySelector(".active-d");
    let offsetD = "100%"; // 默认值
    if (firstActiveD) {
    offsetD =
        firstActiveD.getBoundingClientRect().left -
        parent.querySelector('.om-ww-bottom-cont').getBoundingClientRect().left
    if (window.innerWidth < 1100) {
        offsetD += firstActiveD.offsetWidth / 2;
    } else {
        offsetD += firstActiveD.querySelector(".om-ww-bottom-txt").offsetWidth / 2;
    }


    // 设置css变量
    parent.querySelector('.om-ww-bottom-list').style.setProperty('--om-ww-offset', offsetD + "px");
    }

    // 公共函数：计算 item 的偏移量（减去 om-ww-bottom-txt 宽度一半）
    function getOffsetWithTxt(item) {
    const itemRect = item.getBoundingClientRect();
    const parentRect = parent.querySelector('.om-ww-bottom-cont').getBoundingClientRect();
    const txtEl = item.querySelector(".om-ww-bottom-txt");
    let txtWidth = txtEl ? txtEl.offsetWidth / 2 : 0;
    let numD = 35;
    if (window.innerWidth < 1100) {
        txtWidth = 0
        numD = (283 - itemRect.width) / 2
    }
    return itemRect.left - parentRect.left + txtWidth - numD + "px";
    }

    // 3. 获取最后一个 active-o 的偏移
    const activeOs = parent.querySelectorAll(".active-o");
    if (activeOs.length > 0) {
    const lastActiveO = activeOs[activeOs.length - 1];
    const offsetO = getOffsetWithTxt(lastActiveO);
    const winEl = parent.querySelector(".om-ww-win");
    if (winEl) {
        winEl.style.transform = `translateX(${offsetO})`;
        winEl.style.opacity = 1;
        winEl.style.pointerEvents = "all";
    }
    } else {
    if (firstFuture) {
        parent.querySelector(".om-ww-win").style.opacity = 0;
    } else {
        parent.querySelector(".om-ww-win").style.display = "none";
    }
    }

    // 4. 获取 active-n 的 left 偏移并设置到 om-ww-dw，同时开启倒计时
    if (firstFuture) {
    const offsetN = getOffsetWithTxt(firstFuture);
    const dwEl = parent.querySelector(".om-ww-dw");
    if (dwEl) {
        dwEl.style.transform = `translateX(${offsetN})`;
    }

    // === 倒计时逻辑 ===
    const timeStr = firstFuture.dataset.time;
    const targetTime = new Date(timeStr);

    let countdownEl = parent.querySelector(".om-ww-dw-cont");
    const pad = (num) => String(num).padStart(2, "0");
    function updateCountdown() {
        const nowTime = new Date();
        let diff = targetTime - nowTime;

        if (diff <= 0) {
        clearInterval(timer);
        return;
        }

        const days = Math.floor(diff / (1000 * 60 * 60 * 24));
        diff %= 1000 * 60 * 60 * 24;

        const hours = Math.floor(diff / (1000 * 60 * 60));
        diff %= 1000 * 60 * 60;

        const minutes = Math.floor(diff / (1000 * 60));
        diff %= 1000 * 60;

        const seconds = Math.floor(diff / 1000);

        countdownEl.querySelector('.om-ww-d').textContent = `${pad(days)}`;
        countdownEl.querySelector('.om-ww-h').textContent = `${pad(hours)}`;
        countdownEl.querySelector('.om-ww-m').textContent = `${pad(minutes)}`;
        countdownEl.querySelector('.om-ww-s').textContent = `${pad(seconds)}`;
    }

    updateCountdown(); // 初始化
    const timer = setInterval(updateCountdown, 1000); // 每秒更新
    } else {
    parent.querySelector(".om-ww-dw").style.display = "none";
    }

    // 5. 初始化垂直无限滚动
    const fdList = parent.querySelector(".om-ww-fd-list");
    if (fdList) {
    // 克隆一份内容，拼接在后面，实现无缝衔接
    fdList.innerHTML += fdList.innerHTML;

    const totalHeight = fdList.scrollHeight / 2; // 原始高度
    let pos = 0;

    function step() {
        pos -= 0.01; // 每次上移 1px
        if (Math.abs(pos) >= totalHeight) {
        pos = 0; // 重置
        }
        fdList.style.transform = `translateY(${pos}px)`;
        requestAnimationFrame(step);
    }

    step();

    // 鼠标悬停暂停，移开继续
    let isPaused = false;
    parent
        .querySelector(".om-ww-fd-swiper")
        .addEventListener("mouseenter", () => (isPaused = true));
    parent
        .querySelector(".om-ww-fd-swiper")
        .addEventListener("mouseleave", () => (isPaused = false));

    function stepWithPause() {
        if (!isPaused) {
        pos -= 0.5;
        if (Math.abs(pos) >= totalHeight) {
            pos = 0;
        }
        fdList.style.transform = `translateY(${pos}px)`;
        }
        requestAnimationFrame(stepWithPause);
    }

    stepWithPause();
    }

    // 6. 小屏幕逻辑（水平滚动）
    if (window.innerWidth < 879) {
    let activeN = parent.querySelector(".active-n");
    const cont = parent.querySelector(".om-ww-bottom-cont");
    if (cont) {
        // 累加所有子项宽度
        const totalWidth = Array.from(items).reduce(
        (sum, el) => sum + el.offsetWidth,
        0
        );

        // 初始偏移量
        let currentOffset = 0;

        // 自动居中 active-n
        if (activeN) {
        const activeCenter = activeN.offsetLeft + activeN.offsetWidth / 2;
        const contCenter = cont.offsetWidth / 2;
        currentOffset = activeCenter - contCenter;

        // 边界约束
        if (currentOffset < 0) currentOffset = 0;
        if (currentOffset > totalWidth - cont.offsetWidth) {
            currentOffset = totalWidth - cont.offsetWidth;
        }

        cont.style.transform = `translateX(-${currentOffset}px)`;
        }

        // 按钮左右切换
        const prevBtn = parent.querySelector(".om-ww-btn-prev");
        const nextBtn = parent.querySelector(".om-ww-btn-next");
        function updateButtons() {
        if (prevBtn) {
            if (currentOffset <= 0) {
            prevBtn.style.opacity = "0.4";
            prevBtn.style.pointerEvents = "none";
            } else {
            prevBtn.style.opacity = "1";
            prevBtn.style.pointerEvents = "auto";
            }
        }
        if (nextBtn) {
            if (currentOffset >= totalWidth - cont.offsetWidth) {
            nextBtn.style.opacity = "0.4";
            nextBtn.style.pointerEvents = "none";
            } else {
            nextBtn.style.opacity = "1";
            nextBtn.style.pointerEvents = "auto";
            }
        }
        }
        function move(offsetChange) {
        currentOffset += offsetChange;

        // 边界约束
        if (currentOffset < 0) currentOffset = 0;
        if (currentOffset > totalWidth - cont.offsetWidth) {
            currentOffset = totalWidth - cont.offsetWidth;
        }
        cont.style.transform = `translateX(-${currentOffset}px)`;
        updateButtons();
        }

        if (prevBtn) {
        prevBtn.addEventListener("click", () => {
            move(-items[0].offsetWidth);
        });
        }
        if (nextBtn) {
        nextBtn.addEventListener("click", () => {
            move(items[0].offsetWidth);
        });
        }
    }
    }

}

window.onload = function () {
    handleOmWw()
}
</script>
{% schema %}
{
  "name": "om-ww",
  "blocks": [
    {
      "name": "item",
      "type": "item",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text"
        },
        {
          "type": "text",
          "id": "text1",
          "label": "Text"
        },
        {
          "type": "text",
          "id": "text2",
          "label": "Text"
        },
        {
          "type": "text",
          "id": "text3",
          "label": "时间"
        },
      ]
    }
  ],
  "settings": [
    {
      "type": "text",
      "id": "text",
      "label": "Title"
    },
    {
      "type": "text",
      "id": "text1",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text2",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text3",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text4",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text5",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text6",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text7",
      "label": "Text"
    },
    {
      "type": "richtext",
      "id": "text8",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "邮箱"
    },
    {
      "type": "text",
      "id": "text9",
      "label": "Title"
    },
    {
      "type": "richtext",
      "id": "text10",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "倒计时"
    },
    {
      "type": "text",
      "id": "text11",
      "label": "Title"
    },
    {
      "type": "text",
      "id": "text12",
      "label": "Text"
    },
  ],
  "presets": [
    {
      "name": "om-ww",
      "blocks": []
    }
  ]
}
{% endschema %}
