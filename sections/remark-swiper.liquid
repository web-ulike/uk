<style>
.remark-swiper {
  padding: 80px 0 100px 0;
  color: #000;
  overflow: hidden;
}

.remark-swiper .remark-swiper-top {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  gap: 30px;
}

.remark-swiper .remark-swiper-left {
  max-width: 600px;
}

.remark-swiper .remark-swiper-title {
  font-size: 60px;
  font-family: var(--heading-font-family);
  line-height: 1;
}

.remark-swiper .remark-swiper-sub {
  font-size: 20px;
  line-height: 1.2;
  margin-top: 35px;
}

.remark-swiper .remark-swiper-arraw {
  display: flex;
  gap: 30px;
}

.remark-swiper .remark-swiper-arraw-item {
  width: 70px;
  height: 70px;
  border-radius: 50%;
  border: 1.5px solid #000;
  position: relative;
  cursor: pointer;
  opacity: 0.2;
  transition: opacity 0.3s ease-in-out;
}

.remark-swiper .remark-swiper-arraw-item:hover {
  opacity: 1;
}

.remark-swiper .remark-swiper-arraw-item:first-child {
  transform: scale(-1, -1);
}

.remark-swiper .remark-swiper-arraw-item::before {
  content: '';
  display: block;
  width: 10px;
  height: 10px;
  border-right: 1.5px solid #000;
  border-bottom: 1.5px solid #000;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(-45deg);
  margin-left: -2px;
}

/* .remark-swiper .remark-swiper-arraw-item.disable {
  opacity: 0.2;
  pointer-events: none;
} */

.remark-swiper .remark-swiper-list {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  display: flex;
  gap: 40px;
  margin-top: 70px;
}

.remark-swiper .remark-swiper-item {
  width: 458px;
  max-width: 100%;
  flex-shrink: 0;
  border-radius: 10px;
  border: 1px solid #c2c2c2;
  display: flex;
  flex-direction: column;
}

.remark-swiper .remark-swiper-item-top {
  padding: 12px 12px 25px 12px;
  border-bottom: 1px solid #c2c2c2;
  flex:1;
}

.remark-swiper .remark-swiper-user {
  display: flex;
  align-items: center;
  gap: 20px;
}

.remark-swiper .remark-swiper-user-img {
  width: 78px;
  height: 78px;
  border: 1px solid #000;
  border-radius: 0 0 50% 50%;
  overflow: hidden;
}

.remark-swiper .user-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.remark-swiper .remark-swiper-user-star {
  font-size: 20px;
  color: #e0004d;
  line-height: 1;
}

.remark-swiper .remark-swiper-user-t {
  font-size: 18px;
  font-family: var(--heading-font-family);
  margin-top: 10px;
  line-height: 1.2;
}

.remark-swiper .remark-swiper-user-name {
  font-size: 14px;
  margin-top: 10px;
  line-height: 1.2;
}

.remark-swiper .remark-swiper-user-msg {
  font-size: 14px;
  line-height: 1.2;
  margin-top: 20px;
}

.remark-swiper .remark-swiper-img {
  padding: 12px;
  display: flex;
  gap: 12px;
}

.remark-swiper .remark-swiper-img-item {
  flex: 1;
  position: relative;
  border-radius: 5px;
  overflow: hidden;
}

.remark-swiper .img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  position: relative;
  z-index: 1;
}

.remark-swiper .remark-swiper-tag {
  font-size: 12px;
  color: #fff;
  position: absolute;
  padding: 3px 15px;
  background: rgba(0, 0, 0, 0.5);
  border-radius: 40px;
  top: 10px;
  left: 10px;
  z-index: 2;
}

.remark-swiper .remark-swiper-img-item:last-child .remark-swiper-tag {
  left: auto;
  right: 10px;
}
.bf-2024.remark-swiper{
  background:#000;
}
.bf-2024 .remark-swiper-title{
  color:transparent;
  background: linear-gradient(90deg, #FFF3D4 0%, #FFE2AB 20%);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.bf-2024 .remark-swiper-sub{
  color: #909090;
}
  
.bf-2024 .remark-swiper-arraw-item,
.bf-2024 .remark-swiper-arraw-item::before{
  border-color:#fff;
}
.bf-2024 .remark-swiper-arraw-item{
  opacity:1;
}
.bf-2024 .remark-swiper-arraw-item:hover{
  opacity:.2;
}
  
.bf-2024 .remark-swiper-item{
  flex-direction: column-reverse;
}

.bf-2024 .remark-swiper-item-top {
  padding: 25px 12px 12px 12px;
  border-top: 1px solid #c2c2c2;
  border-bottom:0;
}

.bf-2024 .remark-swiper-user-t,
.bf-2024 .remark-swiper-user-msg{
  color: #fff;
}

.bf-2024 .remark-swiper-user-name{
  color: #6A6A6A;
}

.is-reverse-box .remark-swiper-item{
  flex-direction: column-reverse;
}

.is-reverse-box .remark-swiper-item-top {
  padding: 25px 12px 12px 12px;
  border-top: 1px solid #c2c2c2;
  border-bottom:0;
}
  
@media (max-width: 991px) {
  .remark-swiper {
    padding: 60px 0;
    position: relative;
  }
  .remark-swiper .remark-swiper-title {
    font-size: 28px;
  }
  .remark-swiper .remark-swiper-sub {
    font-size: 16px;
    margin-top: 15px;
  }
  .remark-swiper .remark-swiper-arraw-item {
    width: 40px;
    height: 40px;
  }
  .remark-swiper .remark-swiper-list {
    gap: 30px;
    margin-top: 40px;
  }
  .remark-swiper .remark-swiper-user {
    gap: 10px;
  }
  .remark-swiper .remark-swiper-user-img {
    width: 50px;
    height: 50px;
  }
  .remark-swiper .remark-swiper-user-star {
    font-size: 18px;
  }
  .remark-swiper .remark-swiper-user-t {
    font-size: 16px;
    margin-top: 5px;
  }
  .remark-swiper .remark-swiper-user-name {
    font-size: 12px;
    margin-top: 5px;
  }
  .remark-swiper .remark-swiper-user-msg {
    margin-top: 15px;
  }
  .remark-swiper .remark-swiper-item-top {
    padding-bottom: 20px;
  }
}

@media (max-width: 640px) {
  .remark-swiper {
    padding-bottom: 100px;
  }
  .remark-swiper .remark-swiper-left {
    max-width: none;
    text-align: center;
    width: 100%;
  }
  .remark-swiper .remark-swiper-arraw {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    bottom: 30px;
  }
}
</style>
<section class="section-box">
  <div class="remark-swiper to-top {{ section.settings.text4 }} {% if section.settings.is_reverse != blank %}is-reverse-box{% endif %}">
    <div class="container">
      <div class="remark-swiper-top">
        <div class="remark-swiper-left">
          <div class="remark-swiper-title">{{ section.settings.text }}</div>
          <div class="remark-swiper-sub">{{ section.settings.text1 }}</div>
        </div>
        <div class="remark-swiper-arraw">
          <div class="remark-swiper-arraw-item disable"></div>
          <div class="remark-swiper-arraw-item"></div>
        </div>
      </div>
      <div class="remark-swiper-list">
        {%- for block in section.blocks -%}
          <div class="remark-swiper-item to-top"  style="transition-delay: 0.{{ forloop.index }}s">
            <div class="remark-swiper-item-top">
              <div class="remark-swiper-user">
                <div class="remark-swiper-user-img">
                  {%- if block.settings.image != blank -%}
                    <img loading="lazy" class="user-img" width="{{ block.settings.image.width }}" height="{{ block.settings.image.height }}" {% render 'image-attributes', image: block.settings.image %} alt="{{ block.settings.image.alt | escape }}" >
                  {%- endif -%}
                </div>
                <div class="remark-swiper-user-info">
                  <div class="remark-swiper-user-star">{{ block.settings.text }}</div>
                  <div class="remark-swiper-user-t">{{ block.settings.text1 }}</div>
                  <div class="remark-swiper-user-name">{{ block.settings.text2 }}</div>
                </div>
              </div>
              <div class="remark-swiper-user-msg">{{ block.settings.text3 }}</div>
            </div>
            <div class="remark-swiper-img">
              <div class="remark-swiper-img-item">
                <div class="remark-swiper-tag">{{ section.settings.text2 }}</div>
                {%- if block.settings.image1 != blank -%}
                  <img loading="lazy" class="user-img" width="{{ block.settings.image1.width }}" height="{{ block.settings.image1.height }}" {% render 'image-attributes', image: block.settings.image1 %} alt="{{ block.settings.image1.alt | escape }}" >
                {%- endif -%}
              </div>
              <div class="remark-swiper-img-item">
                <div class="remark-swiper-tag">{{ section.settings.text3 }}</div>
                {%- if block.settings.image2 != blank -%}
                  <img loading="lazy" class="user-img" width="{{ block.settings.image2.width }}" height="{{ block.settings.image2.height }}" {% render 'image-attributes', image: block.settings.image2 %} alt="{{ block.settings.image2.alt | escape }}" >
                {%- endif -%}
              </div>
            </div>
          </div>
        {%- endfor -%}
      </div>
    </div>
  </div>
</section>
<script>
  window.addEventListener('load', function () {
    function remarkSwiper() {
      let $p = $('.remark-swiper')
      let $list = $p.find('.remark-swiper-list')
      let $item = $p.find('.remark-swiper-item')
      let $arraw = $p.find('.remark-swiper-arraw-item')
      let content = document.querySelector('.remark-swiper .remark-swiper-list')
      let length = $item.length
      let pW = $list.width()
      let iW = $item.width()
      let mW = window.innerWidth > 991 ? 40 : 30
      let index = -length + 1
      let timer = null

      $list.html(
        $list.html().repeat(3)
      )
      changeSwiper(true, index)
      function changeSwiper(auto, tindex) {
        let translateX = (iW + mW) * tindex;
        if (auto) {
          $list.css({
            transform: 'translateX(' + translateX + 'px)',
            transition: ' all 0s ease',
          });
        } else {
          $list.css({
            transform: 'translateX(' + translateX + 'px)',
            transition: ' all .6s ease',
          });
        }

      }

      function changeIndex(num) {
        index += num
        if (index <= -2 * length + 2) {
          changeSwiper(true, -length + 2)
          index = -length + 1
        }

        if (index >= -length + 2) {
          changeSwiper(true, - length - 2)
          index = - length - 1
        }
        setTimeout(function () {
          changeSwiper(false, index)
        }, 10)
      }

      timer = setInterval(function () {
        changeIndex(-1)
      }, 3 * 1000)

      $arraw.on('click', function () {
        let sindex = $(this).index()
        clearInterval(timer)
        changeIndex(sindex ? -1 : 1)
        timer = setInterval(function () {
          changeIndex(-1)
        }, 3 * 1000)
      })

      detectSwipe(content, () => {
        clearInterval(timer)
        changeIndex(-1)
        timer = setInterval(function () {
          changeIndex(-1)
        }, 3 * 1000)
      }, () => {
        clearInterval(timer)
        changeIndex(1)
        timer = setInterval(function () {
          changeIndex(-1)
        }, 3 * 1000)
      });

      function detectSwipe(element, onSwipeLeft, onSwipeRight) {
        let startX = 0;

        const getEventX = (event) => {
          return event.touches ? event.touches[0].clientX : event.clientX;
        };

        const handleTouchStart = (e) => {
          startX = getEventX(e);
        };

        const handleTouchMove = (e) => {
          const deltaX = getEventX(e) - startX;
          if (Math.abs(deltaX) > 10 && e.cancelable) {
            e.preventDefault();
          }
        };

        const handleTouchEnd = (e) => {
          const deltaX = getEventX(e.changedTouches ? e.changedTouches[0] : e) - startX;
          if (deltaX > 10) {
            onSwipeRight();
          } else if (deltaX < -10) {
            onSwipeLeft();
          }
        };

        element.addEventListener('touchstart', handleTouchStart);
        element.addEventListener('touchmove', handleTouchMove);
        element.addEventListener('touchend', handleTouchEnd);

        // Add mouse event listeners for PC compatibility
        element.addEventListener('mousedown', handleTouchStart);
        element.addEventListener('mousemove', handleTouchMove);
        element.addEventListener('mouseup', handleTouchEnd);
      }

    }
    remarkSwiper()
  })

</script>
{% schema %}
{
"name": "remark-swiper",
"blocks": [
  {
    "name": "item",
    "type": "item",
    "settings": [
      {
        "type": "image_picker",
        "id": "image",
        "label": "头像"
      },
      {
        "type": "text",
        "id": "text",
        "label": "星"
      },
      {
        "type": "text",
        "id": "text1",
        "label": "Text"
      },
      {
        "type": "text",
        "id": "text2",
        "label": "Text"
      },
      {
        "type": "text",
        "id": "text3",
        "label": "Text"
      },
      {
        "type": "image_picker",
        "id": "image1",
        "label": "Image"
      },
      {
        "type": "image_picker",
        "id": "image2",
        "label": "Image"
      }
    ]
  }
],
"settings": [
  {
    "type": "checkbox",
    "id": "is_reverse",
    "label": "图文位置对换",
    "default":false
  },
  {
    "type": "text",
    "id": "text",
    "label": "标题"
  },
  {
    "type": "text",
    "id": "text1",
    "label": "Text"
  },
  {
    "type": "text",
    "id": "text2",
    "label": "Before",
    "default":"Before"
  },
  {
    "type": "text",
    "id": "text3",
    "label": "After",
    "default":"After"
  },
  {
    "type": "text",
    "id": "text4",
    "label": "自定义class"
  }
],
  "presets": [
  {
    "name": "remark-swiper",
    "blocks": []
  }
]
}
{% endschema %}