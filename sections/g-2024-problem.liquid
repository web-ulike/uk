{%- liquid
  assign se_id = section.id
  assign se_bks = section.blocks
  assign se_stts = section.settings
-%}
<style>
  * {
    padding: 0;
    margin: 0;
  }
  .pc-show {
    display: block;
  }
  .m-show {
    display: none;
  }
  .question-container {
    padding: 0 100px 150px;
  }
  .question-main {
    position: relative; /* Ensure relative positioning for the container */
  }
  .question-main h3 {
    color: var(--Ulike, #3f3636);
    text-align: center;

    font-size: 20px;

    padding-top: 64px;
    padding-bottom: 15px;
  }
  .question-main h1 {
    color: #000;
    text-align: center;

    font-size: 48px;

    margin-bottom: 62px;
  }
  ul {
    list-style-type: none;
    padding: 0;
    cursor: none;
  }

  li.item {
    padding: 0;
    border-top: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
    min-height: 110px;
    line-height: 25px;
    font-size: 40px;
    position: relative;
    transition: background-color 0.3s, color 0.3s, padding-left 0.3s;
    z-index: 1;
    display: flex;
    align-items: center; /* Vertically center the text */
  }

  li.item:hover {
    color: #e0004d;
    padding-left: 80px; /* Add padding to move the text to the right */
  }

  li.item::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: linear-gradient(0deg, #a4f1f4 0%, rgba(164, 241, 244, 0) 125.64%);
    opacity: 0;
    transition: opacity 0.3s;
    z-index: -1; /* Ensure pseudo-element is behind text */
  }

  li.item:hover::after {
    opacity: 0.4;
  }

  li.item::before {
    content: '';
    position: absolute;
    left: 0;
    transition: left 0.3s, color 0.3s;
  }

  li.item:hover::before {
    width: 34.5px;
    height: 24px;
    background-image: url('https://cdn.shopify.com/s/files/1/0740/5882/6015/files/Artwork_42be7af2-4c16-4f69-a83d-81a8e545d39d.png?v=1720009193');
    background-size: contain;
    background-repeat: no-repeat;
    color: red;
    position: absolute;
    left: 20px;
    top: 50%; /* Vertically center */
    transform: translateY(-50%); /* Vertically center */
  }

  .custom-cursor {
    position: absolute;
    width: 202px; /* Set the width of the cursor */
    height: 202px; /* Set the height of the cursor */
    pointer-events: none;
    display: none;
    z-index: 1000;
  }

  @media screen and (max-width: 768px) {
    .pc-show {
      display: none;
    }
    .m-show {
      display: block;
    }
    .question-container {
      padding: 85px 20px 57px;
    }
    .question-main {
      position: relative; /* Ensure relative positioning for the container */
    }
    li.item:hover::before {
      width: 23px;
      height: 16px;
    }
    .question-main h3 {
      padding-top: 0;
      color: #3f3636;
      font-size: 14px;
      text-align: left;
      font-weight: 380;
      padding-bottom: 10px;
    }
    .question-main h1 {
      color: #3f3636;
      text-align: left;
      font-size: 28px;
      line-height: 35px;
      margin-bottom: 40px;
    }
    ul {
      list-style-type: none;
      padding: 0;
    }
    .hover-container {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none; /* Allow mouse events to pass through */
    }
    .image-hover {
      position: absolute;
      right: 10%; /* Adjust based on image width */
      width: 90px; /* Adjust based on image size */
      height: 90px; /* Adjust based on image size */
      display: none;
      z-index: 1;
    }

    li.item {
      padding: 0 10px;
      border-top: 1px solid #ddd;
      border-bottom: 1px solid #ddd;
      cursor: pointer;
      line-height: 25px;
      display: flex;
      font-size: 20px;
      min-height: 90px;
      position: relative;
      transition: background-color 0.3s, color 0.3s, padding-left 0.3s;
      z-index: 1;
      align-items: center; /* Align items at the top */
    }

    li.item:hover {
      color: #e0004d;
      padding-left: 60px; /* Add padding to move the text to the right */
    }
    li.item:hover span {
      width: 160px;
    }
    li.item::after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: linear-gradient(0deg, #a4f1f4 0%, rgba(164, 241, 244, 0) 125.64%);
      opacity: 0;
      transition: opacity 0.3s;
      z-index: -1; /* Ensure pseudo-element is behind text */
    }

    li.item:hover::after {
      opacity: 0.4;
    }
  }
</style>

<div class="question-container to-top ">
  <div class="question-main to-top ">
    <h3>About Bikini Hair Removal</h3>
    <h1>Have you encountered any of the following?</h1>
    <ul id="anchor-group">
      {% for item in se_bks %}
        <div class="pc-show">
          <li
            class="item anchor pc-show"
            data-cursor="{{ item.settings.image | image_url }}" 
            data-target=".navp-{{ forloop.index }}"
            data-image="{{ item.settings.image | image_url }}"
          >
            <span>{{ item.settings.name }}</span>
          </li>
        </div>
        <div class="m-show">
          <li
            class="item anchor m-show"
            data-cursor="{{ item.settings.image | image_url }}" 
            data-target=".navm-{{ forloop.index }}"
            data-image="{{ item.settings.image | image_url }}"
          >
            <span>{{ item.settings.name }}</span>
          </li>
        </div>
      {% endfor %}
    </ul>
    <div class="hover-container">
      <img src="" class="image-hover m-show" id="hover-image" alt="Hover Image" style="display: none;">
    </div>
  </div>
</div>

<img id="custom-cursor" class="custom-cursor pc-show" src="" alt="Custom Cursor" style="display: none;">
<script>
  document.addEventListener('DOMContentLoaded', function () {
      const anchorGroup = document.getElementById('anchor-group');
      const customCursor = document.getElementById('custom-cursor');

      function handleCursorEvents() {
     
          if (window.innerWidth > 768) {
              anchorGroup.addEventListener('mouseover', function (e) {
                  const item = e.target.closest('.anchor');
                  if (item) {
                      const cursorUrl = item.getAttribute('data-cursor');
                      customCursor.src = cursorUrl;
                      customCursor.style.display = 'block';
                  }
              });

              anchorGroup.addEventListener('mouseout', function (e) {
                  const item = e.target.closest('.anchor');
                  if (item) {
                      customCursor.style.display = 'none';
                  }
              });

              anchorGroup.addEventListener('mousemove', function (e) {
                  const item = e.target.closest('.anchor');
                  if (item) {
                      customCursor.style.left = `${e.pageX}px`;
                      customCursor.style.top = `${e.pageY}px`;
                  }
              });
          } else {
              anchorGroup.addEventListener('mouseover', function (e) {
                console.log('e',e)
                  const item = e.target.closest('.anchor');
                  console.log('item',item)
                  if (item) {
                      const hoverImage = document.getElementById('hover-image');
                      const rect = item.getBoundingClientRect();
                      const containerRect = document.querySelector('.question-main').getBoundingClientRect();
                      const imageUrl = item.getAttribute('data-image');

                      hoverImage.src = imageUrl;

                      // 检查屏幕宽度是否小于 768 像素
                      if (window.innerWidth <= 768) {
                          hoverImage.style.top = `${rect.top - containerRect.top}px`; // 在小屏幕上直接使用当前元素的位置
                      }
                      hoverImage.style.display = 'block';
                  }
              });
          }
      }

      handleCursorEvents();
      window.addEventListener('resize', handleCursorEvents);
  });
  </script>
{% schema %}
{
  "name": "g-2024-act-problem",
  "settings": [
    {
      "type": "html",
      "id": "title",
      "label": "标题"
    },
    {
      "type": "textarea",
      "id": "desc",
      "label": "描述"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "图片"
    }
  ],
  "blocks": [
    {
      "type": "item",
      "name": "item",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "图片"
        },
        {
          "type": "textarea",
          "id": "name",
          "label": "名称"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "g-2024-problem",
      "category": "g-2024-problem",
      "blocks": []
    }
  ]
}
{% endschema %}
