<style>
  #shopify-section-{{ section.id }} {
    --text-color: {{  section.settings.text_color.red }}, {{  section.settings.text_color.green }}, {{  section.settings.text_color.blue }};
}
.background_table-box{
  position: relative;
  overflow: hidden;
}
.banner_table{
  position: relative;
    width: 100%;
    height: 100%;
    max-height: 875px;
    overflow: hidden;
    height: 875px;
}
.banner_table img{
  display: block;
  width: 100%;
    height: 100%;
    -o-object-fit: cover;
    object-fit: cover;
    -o-object-position: center;
    object-position: center;
}
.background_table-cnt {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
}
.background_table-cnt .container {
    position: relative;
    height: 100%;
}
.bg_ta-box{
  position: absolute;
  top: 50%;
  right: 0;
  transform: translateY(-50%);
  max-width: 600px;
}
.background_table-txt{
  color: #E0004D;
font-size: 16px;
font-style: normal;
font-weight: 400;
line-height: 125%;
}
.background_table-tle{
font-size: 44px;
font-style: normal;
font-weight: 500;
line-height: 125%;
margin-bottom: 20px;
      font-family: var(--heading-font-family);
    font-weight: var(--heading-font-weight);
}
.background_table-text{
font-size: 16px;
font-style: normal;
font-weight: 400;
line-height: 150%;
  margin-bottom: 40px;
}
.background_table-cnt .temperature-contrast-chart{
  border-radius: 10px;
  backdrop-filter: blur(10px);
  position: relative;
  background: rgba(255, 255, 255, .1);
}
.background_table-cnt .temperature-contrast-chart .chart-box{
  padding-top: 60%;
  position: relative;
}
.background_table-cnt .temperature-contrast-chart .ulike-chart{
  position: absolute;
  width: calc(100% - 40px);
  height: calc(100% - 40px);
  overflow: hidden;
  top: 10px;
  left: 20px;
}
.background_table-cnt .temperature-contrast-chart::before{
  position: absolute;
  content: '';
  display: block;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: -1;
  background: url(https://cdn.shopify.com/s/files/1/0656/9079/6273/files/e2_6cafad50-ca24-47b5-855d-e0f5a57fb9c6.png) no-repeat;
  background-size:100% 100%;
}

@media screen and (max-width: 1650px){
  .bg_ta-box {
    right: var(--container-gutter);
}
}

@media screen and (max-width: 991px){
  .banner_table {
    max-height: 940px;
    height: 940px;
}
.bg_ta-box {
    right: 0;
    width: 100%;
    max-width: 100%;
    padding: 0 40px;
    bottom: 47px;
    top: inherit;
    transform: none;
}
}

@media (max-width:640px) {
  .background_table-cnt .temperature-contrast-chart .ulike-chart{
    width: calc(100% - 30px);
    height: calc(100% - 20px);
    left: 15px;
  }
  
  .background_table-cnt .temperature-contrast-chart .chart-box{
    padding-top: 90%;
  }
  .background_table-cnt .temperature-contrast-chart::before{
    display:none;
  }
  .bg_ta-box {
    text-align: center;
}
  .background_table-tle{
    font-size: 28px;
    margin-bottom: 15px;
  }
  .background_table-text{
    font-size: 14px;
    margin-bottom: 30px;
  }
}
</style>

<section class="background_table-box">
<div class="banner_table to-top">
{%- if section.settings.background_image != blank -%}
  <img class="{% if section.settings.background_image_mobile != blank %}hidden-pocket{% endif %}" src="{{ section.settings.background_image | image_url }}"/>
{%- endif -%}
{%- if section.settings.background_image_mobile != blank -%}
  <img class="hidden-lap-and-up" src="{{ section.settings.background_image_mobile | image_url }}"/>
  {%- endif -%}
</div>
  <div class="background_table-cnt">
    <div class="container">
      <div class="bg_ta-box">
        {%- if section.settings.txt != blank -%}
          <div class="background_table-txt to-top" style="transition-delay: 0.1s">{{ section.settings.txt }}</div>
        {%- endif -%}
          {%- if section.settings.title != blank -%}
            <div class="background_table-tle to-top" style="transition-delay: 0.2s">{{ section.settings.title }}</div>
          {%- endif -%}
          {%- if section.settings.content != blank -%}
            <div class="background_table-text to-top" style="transition-delay: 0.3s">{{ section.settings.content }}</div>
          {%- endif -%}
          <div class="temperature-contrast-chart to-top" style="transition-delay: 0.4s">
            <div class="chart-box">
              <div id="ulike-chart" class="ulike-chart"></div>
            </div>
          </div>
      </div>
    </div>
  </div>
</section>
<script src="https://cdn.shopify.com/s/files/1/0656/9079/6273/files/echarts.min.js" async></script>
<script>
      function createUlikeChart() {
      let dom = document.getElementById('ulike-chart')
      let myChart = echarts.init(dom, null, {
        renderer: 'canvas',
        useDirtyRect: false,
      })

      let option = {
        animationDuration: 1500,
        legend: {
          data: [
            {
              name:`Avg.skin temperature`,
              itemStyle: {
                color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [
                  {
                    offset: 1,
                    color: '#ff7d09',
                  }, // 渐变起始色
                  {
                    offset: 0,
                    color: '#ffd40c',
                  },
                ]),
              },
            },
            {
              name: 'Ulike Sapphire Cooling™',
              itemStyle: {
                color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [
                  {
                    offset: 1,
                    color: '#48c6ef',
                  }, // 渐变起始色
                  {
                    offset: 0,
                    color: '#6f86d6',
                  },
                ]),
              },
            },
            {
              name: 'Existing IPL products',
              itemStyle: {
                color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [
                  {
                    offset: 1,
                    color: '#97253b',
                  }, // 渐变起始色
                  {
                    offset: 0,
                    color: '#ff0000',
                  },
                ]),
              },
            },
          ],
          x: 'center',
          y: 'bottom',
          icon: 'rect',
          itemWidth: 12,
          itemHeight: 3,
          itemGap:40,
          textStyle: {
            fontSize: 12,
            color: '#fff',
          },
          selectedMode: false,
        },
        grid: {
          top: '30px',
          left: '3%',
          right: '4%',
          bottom: '35px',
          containLabel: true,
        },
        xAxis: {
          type: 'category',
          boundaryGap: false,
          data: ['min', '5', '10', '15', '20', '25'],
          axisTick: {
            show: false, //不显示刻度
          },
          axisLabel: {
            margin: 20, // 调整 X 轴文字距离轴线的距离
            color: '#fff',
            fontWeight: 600,
          },
          axisLine: {
            lineStyle: {
              color: '#535353', // 设置 X 轴线条颜色
            },
          },
        },
        yAxis: {
          type: 'value',
          min: 0, // 动态设置 Y 轴的最小值
          max: 60,
          interval: 15,
          axisLabel: {
            margin: 20, // 调整 X 轴文字距离轴线的距离
            color: '#fff',
            fontWeight: 600,
            formatter: function (value) {
              // 使用 formatter 自定义 Y 轴标签的显示格式
              if (value === 0) {
                return '℃'
              } else {
                return value
              }
            },
          },
          splitLine: {
            show: true,
            lineStyle: {
              color: '#535353', // 设置分隔线颜色
            },
          },
        },
        series: [
          {
            name: 'Avg.skin temperature',
            type: 'line',
            smooth: true,
            showSymbol: false,
            data: [35, 35, 35, 35, 35, 35],
            lineStyle: {
              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                {
                  offset: 1,
                  color: '#ff7d09',
                }, // 渐变起始色
                {
                  offset: 0,
                  color: '#ffd40c',
                },
              ]),
            }
          },
          {
            name: 'Ulike Sapphire Cooling™',
            type: 'line',
            smooth: true,
            showSymbol: false,
            data: [35, 8, 18, 17, 18, 17],
            lineStyle: {
              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                {
                  offset: 1,
                  color: '#48c6ef',
                }, // 渐变起始色
                {
                  offset: 0,
                  color: '#6f86d6',
                },
              ]),
            }
          },
          {
            name: 'Existing IPL products',
            type: 'line',
            smooth: true,
            showSymbol: false,
            data: [35, 38, 46, 45, 47, 52],
            lineStyle: {
              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                {
                  offset: 1,
                  color: '#97253b',
                }, // 渐变起始色
                {
                  offset: 0,
                  color: '#ff0000',
                },
              ]),
            }
          },
          // 闪烁点的重点是以下配置
          {
            // 设置涟漪特效动画
            type: 'effectScatter',
            // 有三种: cartesian2d(二维的直角坐标系) polar(极坐标系) geo(地理坐标系) ,此需求使用cartesian2d
            coordinateSystem: 'cartesian2d',
            data: [
              ['5', 8],
              ['10', 18],
            ], //2d坐标系--[x轴, y轴, 标记大小]
            symbolSize: 15,

            // 何时显示特效:'render'-绘制完成后显示特效 'emphasis'-高亮（hover）的时候显示特效
            showEffectOn: 'render',
            // 涟漪特效配置
            rippleEffect: {
              // 波纹的绘制方式,可选'stroke'和'fill'
              brushType: 'fill',
            },
            hoverAnimation: true,
            itemStyle: {
              normal: {
                color: new echarts.graphic.LinearGradient(0, 0, 1, 1, [
                  {
                    offset: 1,
                    color: '#209cff',
                  }, // 渐变起始色
                  {
                    offset: 0,
                    color: '#68e0cf',
                  },
                ]),
                shadowBlur: 30,
                shadowColor: '#fff',
              },
            },
            zlevel: 1
          },
        ],
        tooltip: {
          trigger: 'item',
          backgroundColor: 'rgba(255,255,255,1)',
          borderColor: 'rgba(0,72,176,0)',
          position:'top',
          formatter: function (params) {
            // 自定义tooltip内容
            let html = ''
            if(params.name == 5){
              html=`<div style="font-size: 14px;color: #000;text-align: center;line-height: 1.2;">Temperature <br/> stabilization begins</div>`
            }else{
              html=`<div style="font-size: 14px;color: #000;text-align: center;line-height: 1.2;"><div style="font-family: var(--heading-font-family);">65℃</div>Stabilizing temperature</div>`
            }
            return html
          },
        },
      }
      if (option && typeof option === 'object') {
        if(window.innerWidth<1300) option.legend.itemGap = 10
        if(window.innerWidth<1100) option.legend.textStyle.fontSize = 10
        if(window.innerWidth<640) option.grid.bottom = '50px'
        if(window.innerWidth<640) option.grid.top = '10px'
        if(window.innerWidth<640) option.grid.left = '0'
        if(window.innerWidth<640) option.grid.right = '2%'
        myChart.setOption(option)
      }

      window.addEventListener('resize', function(){
        myChart.resize()
      })
    }

    function initChart(){
      let $p = $('.temperature-contrast-chart .chart-box')
      let react = $p[0].getBoundingClientRect()
      let windowHeight = window.innerHeight
      if($p.hasClass('isInit')) return
      if((windowHeight > react.top) && (windowHeight - react.top < react.height +50 || react.top > 80) ){
        $p.addClass('isInit')
        setTimeout(() => {
          createUlikeChart()
        }, 600);
      }
    }

    window.addEventListener('load',function(){
      // 调用函数创建图表
      initChart()
      window.addEventListener('scroll',function(){
        initChart()
      })
    })

</script>
{% schema %}
{
  "name": "Background Table",
  "class": "background_table",
  "settings": [
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background Image"
    },

    {
      "type": "image_picker",
      "id": "background_image_mobile",
      "label": "Background Image Mobile"
    },
    {
      "type": "text",
      "id": "txt",
      "label": "Txt"
    },
    {
      "type": "text",
      "id": "title",
      "label": "title"
    },
    {
      "type": "text",
      "id": "content",
      "label": "Content"
    },
    {
      "type": "color",
      "id": "background",
      "label": "Background",
      "info": "Used while slideshow image is loading",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "rgba(0,0,0,0)"
    }
  ],
  "presets": [
    {
      "name": "Background Table"
    }
  ]
}
{% endschema %}