<style>
.title-diy{
  font-size: 40px;
}

@media (max-width: 991px) {
  .title-diy {
    font-size: 28px;
  }
}

.u-carousel-box{
  padding: 60px 0;
  overflow: hidden;
}
.u-carousel-box .title-diy{
    font-weight: normal;
    margin:0;
}
.u-carousel-box .u-carousel-box-sub{
  font-size: 18px;
  color: #434343;
  text-align: center;
  line-height: 1.3;
  max-width: 480px;
  margin: 0 auto;
  margin-top: 25px;
}

.u-carousel-box .u-carousel-cont{
  margin: 0 auto;
  margin-top: 50px;
  width: 500px;
}

.u-carousel-box .u-carousel-list{
  display: flex;
}

.u-carousel-box .u-carousel-item{
  width: 500px;
  margin-right: 50px;
  flex-shrink: 0;
}

.u-carousel-box .u-carousel-img{
  position: relative;
  padding-top: 62.5%;
  overflow: hidden;
}

.u-carousel-box .img{
  position: absolute;
  z-index: 1;
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
  top: 0;
  left: 0;
}

.u-carousel-box .u-more{
  font-size: 14px;
  color: #000;
  padding: 10px 0;
  text-align: center;
  backdrop-filter: blur(16px);
  background: rgba(255, 255, 255, .6);
  position: absolute;
  z-index: 2;
  width: 100%;
  bottom: 0;
  left: 0;
  transform: translateY(50px);
  transition: transform 0.8s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.u-carousel-box .u-carousel-item:hover .u-more{
  transform: translateY(0px);
}

.u-carousel-box .u-carousel-img::after{
  position: absolute;
  content: '';
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, .15);
  z-index: 2;
  opacity: 0;
  transition: opacity 0.4s cubic-bezier(0.645, 0.045, 0.355, 1);
}
.u-carousel-box .u-carousel-img:hover::after{
  opacity: 1;
}

.u-carousel-box .u-carousel-img:hover .u-more{
  transform: translateY(0);
}

.u-carousel-box .u-carousel-title{
  font-size: 16px;
  color: #000;
  font-family: var(--heading-font-family);
  line-height: 1.2;
  margin-top: 15px;
}

.u-carousel-box .u-carousel-p{
  font-size: 14px;
  color: #434343;
  margin-top: 10px;
  line-height: 1.2;
}

.u-carousel-box .mark-bottom::before{
  background: #f9f9f9;
}

@media (max-width:768px) {
  .u-carousel-box .u-carousel-box-sub{
    margin-top: 15px;
  }
  .u-carousel-box .u-carousel-cont{
    width: 300px;
    margin-top: 40px;
  }
  .u-carousel-box .u-carousel-item{
    width: 300px;
    margin-right: 28px;
  }
}
</style>

<section class="section-box">
  <div class="u-carousel-box">
    <div class="container">
      <h2 class="title-diy">{{ section.settings.title }}</h2>
      <div class="u-carousel-box-sub">{{ section.settings.text }}</div>
      <div class="u-carousel-cont">
        <div class="u-carousel-list">
          {%- for block in section.blocks -%}
            <a href="{{ block.settings.link }}" class="u-carousel-item to-top" style="transition-delay: 0.{{ forloop.index }}s">
              <div class="u-carousel-img mark-bottom">
                {%- if block.settings.image != blank -%}
                 <img loading="lazy" class="img" width="{{ block.settings.image.width }}" height="{{ block.settings.image.height }}" {% render 'image-attributes', image: block.settings.image %} alt="{{ block.settings.image.alt | escape }}" >
              {%- endif -%}
                <div class="u-more">{{ block.settings.text2 }}</div>
              </div>
              <div class="u-carousel-title">
                {{ block.settings.text }}
              </div>
              <div class="u-carousel-p">{{ block.settings.text1 }}</div>
            </a>
          {%- endfor -%}
        </div>
      </div>
    </div>
  </div>
</section>
<script>
    function mediaRealSlider($el) {
      let $p = $el;
      let $list = $p.find('.u-carousel-list');
      let length = $list.find('.u-carousel-item').length;
      let index = -length; //[0,-length-2]
      let isLeftBtn = 1; //0左 1右
      let timer = null;
      let mrNum = window.innerWidth>768?50:28
      if (length < 5) return;

      $list.html(
        $list.html().repeat(3)
      );
      skewTransform(true);
      function skewTransform(auto, tIndex = index, skew = 0) {
        let width = $list
          .find('.u-carousel-item')
          .eq(Math.abs(tIndex) - 1)
          .width();
        let translateX = (width + mrNum) * tIndex;
        if (auto) {
          translateX += skew;
          $list.css({
            transform: 'translateX(' + translateX + 'px)',
            transition: ' all 0s ease',
          });
        } else {
          $list.css({
            transform: 'translateX(' + translateX + 'px)',
            transition: ' all .6s ease',
          });
        }
      }
      function changeLeft(skew) {
        if (isLeftBtn && index == -2*length) {
          skewTransform(true, -length + 1, skew);
          index = -length;
        }
        if (!isLeftBtn && index == -length+1) {
          skewTransform(true, -2*length, skew);
          index = -2*length + 1;
        }
        setTimeout(() => {
          skewTransform();
        }, 10);
      }

      function getTranslateX($element) {
        var matrix = $element
          .css('transform')
          .replace(/[^0-9\-.,]/g, '')
          .split(',');
        var translateX = parseFloat(matrix[12] || matrix[4]);
        return translateX;
      }
      function clearTimer() {
        if (timer) {
          clearInterval(timer);
          timer = null;
        }
      }

      function initMobileCarousel() {
        let startX = 0;
        let listTar = 0;
        let startY = 0;
        let isScrolling = false;
        let isDragging = false;

        function setAutoPlay() {
          clearTimer();
          timer = setInterval(() => {
            isLeftBtn = 1;
            index--;
            changeLeft();
          }, 5000);
        }

        $list.on('touchstart mousedown', function (e) {
          clearTimer();

          if (e.type === 'touchstart') {
            var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];
            startX = touch.clientX;
            startY = touch.clientY;
          } else {
            startX = e.clientX;
            startY = e.clientY;
          }

          isScrolling = false;
          isDragging = true;
          listTar = getTranslateX($list);
          $(document).on('touchmove mousemove', handleMove);
          $(document).on('touchend mouseup', handleEnd);
        });

        function handleMove(e) {
          if (isDragging) {
            if (e.type === 'touchmove') {
              var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];
              var diffX = touch.clientX - startX;
              var diffY = touch.clientY - startY;
            } else {
              var diffX = e.clientX - startX;
              var diffY = e.clientY - startY;
            }

            var translateX = listTar + diffX;

            if (!isScrolling) {
              if (Math.abs(diffX) > Math.abs(diffY)) {
                isScrolling = true;
              }
            }
            if (isScrolling && e.cancelable) {
              e.preventDefault();
              $list.css({ transform: 'translateX(' + translateX + 'px)', transition: 'all 0s ease' });
            }
          }
        }

        function handleEnd(e) { 
          if (isDragging) {
            $(document).off('touchmove mousemove', handleMove);
            $(document).off('touchend mouseup', handleEnd);
            
            // 检查被拖动的目标元素是否是a标签
            const isAnchorTag = $(e.target).closest('a').length > 0;
      
            if (isScrolling) {
              if (e.type === 'touchend') {
                var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];
                var diffX = touch.clientX - startX;
              } else {
                var diffX = e.clientX - startX;
              }

              if (Math.abs(diffX) > window.innerWidth * 0.05) {
                if (diffX > 0) {
                  index = index + 1;
                  isLeftBtn = 0;
                } else {
                  index = index - 1;
                  isLeftBtn = 1;
                }
                changeLeft(diffX);
              } else {
                $list.css({ transform: 'translateX(' + listTar + 'px)', transition: 'all .4s ease' });
              }
            }else{
              isDragging = false;
            }

            setAutoPlay(); // 保证只触发一次自动播放
            if (isAnchorTag&&window.innerWidth>640) {
              // 如果是a标签，阻止默认行为并返回
              e.stopPropagation()
              e.preventDefault()
              return false
            }
            isScrolling = false;
            isDragging = false;
          }
        }
        $p.find('a').click(function(e){
          if(isDragging){
            e.preventDefault()
            return false
          }
        })
      }
      initMobileCarousel();
      clearTimer();

      timer = setInterval(() => {
        isLeftBtn = 1;
        index--;
        changeLeft();
      }, 5000);

      $list.hover(
        function () {
          clearTimer();
        },
        function () {
          clearTimer();
          timer = setInterval(() => {
            isLeftBtn = 1;
            index--;
            changeLeft();
          }, 5000);
        }
      );
    }

    window.addEventListener('load', function () {
      mediaRealSlider($('.u-carousel-box'))
    })

  </script>
{% schema %}
{
  "name": "labs-carousel",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title"
    },
    {
      "type": "text",
      "id": "text",
      "label": "Text"
    }
  ],
  "blocks": [
    {
      "name": "item",
      "type": "item",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Text"
        },
        {
          "type": "text",
          "id": "text1",
          "label": "Text"
        },
        {
          "type": "text",
          "id": "text2",
          "label": "Text"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "labs-carousel"
    }
  ]
}
{% endschema %}