<style>
.preheat-video-results{
  position: relative;
}

.preheat-video-results .preheat-video-results-cont{
  position: relative;
  z-index: 1;
}

.preheat-video-results .preheat-video-results .img{
  display: block;
  width: 100%;
}

.preheat-video-results .mb-box{
  display: none;
}

.preheat-video-results .preheat-video-results-top{
  position: absolute;
  width: 100%;
  z-index: 2;
  left: 0;
  top: 94px;
}
.preheat-video-results .preheat-video-results-title{
  color: #3F3636;
  font-size: 50px;
  line-height: 1;
}
.preheat-video-results .preheat-video-results-sub{
  color: #190A0A;
  font-size: 18px;
  line-height: 1.5;
  max-width: 590px;
  margin-top: 30px;
}
.preheat-video-results .preheat-video-results-sub p{
  margin: 0;
}

.preheat-video-results .preheat-video-results-sub strong{
  font-weight: normal;
  font-family: var(--heading-font-family);
}
  
.preheat-video-results .preheat-video-results-p{
  color: #3F3636;
  font-size: 14px;
  line-height: 1.5;
  margin-top: 30px;
  max-width: 738px;
}
.preheat-video-results .preheat-video-results-bottom{
  position: absolute;
  width: 100%;
  z-index: 2;
  left: 0;
  bottom: 84px;
}

.preheat-video-results .preheat-video-results-flex{
  display: flex;
  align-items: flex-end;
  gap: 80px;
}

.preheat-video-results .preheat-video-results-left{
  padding-right: 80px;
  border-right: 1px solid #3F3636;
}

.preheat-video-results .results-left-img{
  width: 195px;
  display: block;
}

.preheat-video-results .results-left-text{
  color: #190A0A;
  font-size: 16px;
  line-height: 1.3;
}

.preheat-video-results .preheat-video-results-right{
  display: flex;
  align-items: center;
  gap: 85px;
}

.preheat-video-results .results-right-sub{
  color: #190A0A;
  font-size: 14px;
  line-height: 1.2;
}

.preheat-video-results .results-right-text{
  color: #190A0A;
  font-size: 60px;
  line-height: 1;
  font-family: var(--text-font-light-family);
}

.preheat-video-results .results-right-text span{
  font-size: 100px;
}

  .preheat-video-results .preheat-video-results-wrapper{
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    z-index: 2;
  }

 .preheat-video-results .preheat-video-results-wrapper video{
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .preheat-video-results .video-wrapper__play-button{
    position: absolute;
    margin-bottom:0;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }

  .preheat-video-results .video-wrapper__play-button img{
    width:100px;
  }

@media (max-width:1500px) {
  .preheat-video-results .preheat-video-results-flex{
    zoom: .6;
  }
}


@media (max-width:991px) {
  .preheat-video-results{
    padding: 55px 0;
  }
  .preheat-video-results .preheat-video-results-top{
    position: relative;
    top: 0;
  }
  .preheat-video-results .preheat-video-results-bottom{
    position: relative;
    bottom: 0;
  }
  .preheat-video-results .preheat-video-results-cont{
    margin: 30px 24px;
  }
  .preheat-video-results .preheat-video-results-title{
    font-size: 24px;
    line-height: 1.25;
  }
  .preheat-video-results .preheat-video-results-sub{
    font-size: 14px;
  }
  .preheat-video-results .preheat-video-results-flex{
    zoom: 1;
    align-items: flex-start;
    justify-content: space-between;
  }
  .preheat-video-results .preheat-video-results-left{
    padding: 0;
    border: 0;
    width: 98px;
  }
  .preheat-video-results .preheat-video-results-right{
    flex-direction: column;
    gap: 40px;
  }
  .preheat-video-results .results-left-text{
    font-size: 12px;
    text-align: center;
    margin-top: 5px;
  }
  .preheat-video-results .results-right-sub{
    font-size: 12px;
  }
  .preheat-video-results .results-right-text{
    font-size: 25px;
    line-height: 1.2;
  }
  .preheat-video-results .results-right-text span{
    font-size: 35px;
  }
  .preheat-video-results .video-wrapper__play-button{
    zoom:.6;
  }
}
</style>

<section class="section-box">
  <div class="preheat-video-results">
    <div class="preheat-video-results-top">
      <div class="container">
        <div class="preheat-video-results-title line-top">{{ section.settings.text }}</div>
        <div class="preheat-video-results-sub line-top">{{ section.settings.text1 }}</div>
        {%- if section.settings.text12 != blank -%}
          <div class="preheat-video-results-p line-top" style="transition-delay: 0.1s">{{ section.settings.text12 }}</div>
        {%- endif -%}
      </div>
    </div>
    <div class="preheat-video-results-cont">
      {%- if section.settings.background_image != blank -%}
        <img loading="lazy" class="img pc-box" src="{{ section.settings.background_image | image_url }}"/>
      {%- endif -%}
      {%- if section.settings.background_image_mobile != blank -%}
        <img loading="lazy" class="img mb-box" src="{{ section.settings.background_image_mobile | image_url }}"/>
      {%- endif -%}
      {%- if section.settings.video != blank -%}
        <native-video {% if section.settings.autoplay %}autoplay{% endif %} class="preheat-video-results-wrapper{% if section.settings.mobile_video != blank %} pc-box{% endif %}">
          {%- unless section.settings.autoplay -%}
              <button type="button" class="video-wrapper__play-button video-wrapper__play-button--large video-wrapper__play-button--ripple" title="{{ 'general.accessibility.play_video' | t | escape }}">
                {%- if section.settings.v_icon != blank -%}
                  <img
                    loading="lazy"
                    class="v_img"
                    width="{{ section.settings.v_icon.width }}"
                    height="{{ section.settings.v_icon.height }}"
                    {% render 'image-attributes', image: section.settings.v_icon %}
                    alt="{{ section.settings.v_icon.alt | escape }}"
                  >
                {%- endif -%}
              </button>
            {%- endunless -%}
          <template>
            {{- section.settings.video | video_tag: controls: section.settings.show_video_controls, autoplay: section.settings.autoplay, muted: section.settings.autoplay, playsinline: section.settings.autoplay, loop: true -}}
          </template>
        </native-video>
      {%- endif -%}
      {%- if section.settings.mobile_video != blank -%}
         <native-video {% if section.settings.autoplay %}autoplay{% endif %} class="preheat-video-results-wrapper mb-box">
           {%- unless section.settings.autoplay -%}
              <button type="button" class="video-wrapper__play-button video-wrapper__play-button--large video-wrapper__play-button--ripple" title="{{ 'general.accessibility.play_video' | t | escape }}">
                {%- if section.settings.v_icon != blank -%}
                  <img
                    loading="lazy"
                    class="v_img"
                    width="{{ section.settings.v_icon.width }}"
                    height="{{ section.settings.v_icon.height }}"
                    {% render 'image-attributes', image: section.settings.v_icon %}
                    alt="{{ section.settings.v_icon.alt | escape }}"
                  >
                {%- endif -%}
              </button>
            {%- endunless -%}
          <template>
            {{- section.settings.mobile_video | video_tag: controls: section.settings.show_video_controls, autoplay: section.settings.autoplay, muted: section.settings.autoplay, playsinline: section.settings.autoplay, loop: true -}}
          </template>
        </native-video>
      {%- endif -%}
    </div>
    <div class="preheat-video-results-bottom">
      <div class="container">
        <div class="preheat-video-results-flex">
          <div class="preheat-video-results-left to-top">
            {%- if section.settings.image != blank -%}
              <img loading="lazy" class="results-left-img" src="{{ section.settings.image | image_url }}"/>
            {%- endif -%}
            <div class="results-left-text">{{ section.settings.text2 }}</div>
          </div>
          <div class="preheat-video-results-right to-top" style="transition-delay: 0.1s">
            <div class="preheat-video-results-item">
              <div class="results-right-sub">{{ section.settings.text3 }}</div>
              <div class="results-right-text number-anime">{{ section.settings.text4 }}</div>
              <div class="results-right-sub">{{ section.settings.text5 }}</div>
            </div>
            <div class="preheat-video-results-item">
              <div class="results-right-sub">{{ section.settings.text6 }}</div>
              <div class="results-right-text number-anime">{{ section.settings.text7 }}</div>
              <div class="results-right-sub">{{ section.settings.text8 }}</div>
            </div>
            <div class="preheat-video-results-item">
              <div class="results-right-sub">{{ section.settings.text9 }}</div>
              <div class="results-right-text number-anime">{{ section.settings.text10 }}</div>
              <div class="results-right-sub">{{ section.settings.text11 }}</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<script>
  function wrapStringsWithSpan(element) {
      let text = element.innerText;
      let parts = text.split(/(\.|\%)/);
      let html = "";
      let isPoint = parts.includes('.')
      let dotFound = false;
      let isFirst = true
      for (let i = 0; i < parts.length; i++) {
          if(parts[i] !==''){
              if (parts[i] === ".") {
                  dotFound = true;
                  html += "</span>" + parts[i];
              } else if (parts[i] === "%" && dotFound||parts[i] === "%" && !isPoint) {
                  if(!isPoint){
                      html += "</span>" + parts[i]
                  }else{
                      html += parts[i]
                      dotFound = false;
                  }
              } else {
                  if(isFirst) {
                      html+= "<span>" + parts[i];
                      isFirst = false
                  }else{
                      html += parts[i];
                  }
              }
          }
      }
  
      element.innerHTML = html;
  }
  document.querySelectorAll('.preheat-video-results .number-anime').forEach(ele=>{
    wrapStringsWithSpan(ele)
  })
  window.addEventListener('load', () => {
    animateNumbersVisibleAnime('.preheat-video-results .number-anime span');
  })

  // document.addEventListener("DOMContentLoaded", function() {
  //   animateNumbersVisibleAnime('.preheat-video-results .number-anime');
  // })
  
</script>
{% schema %}
{
  "name": "preheat-video-results",
  "settings": [
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Image"
    },
    {
      "type": "image_picker",
      "id": "background_image_mobile",
      "label": "Image Mobile"
    },
    {
      "type": "video",
      "id": "video",
      "label": "Video",
      "info": "Replaces the external video if both are set."
    },
     {
      "type": "video",
      "id": "mobile_video",
      "label": "Mobile Video",
      "info": "Replaces the external video if both are set."
    },
    {
      "type": "text",
      "id": "text",
      "label": "Text"
    },
    {
      "type": "richtext",
      "id": "text1",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text12",
      "label": "Text"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Icon"
    },
    {
      "type": "text",
      "id": "text2",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text3",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text4",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text5",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text6",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text7",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text8",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text9",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text10",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text11",
      "label": "Text"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Autoplay",
      "info": "Video is muted automatically to allow autoplay.",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_video_controls",
      "label": "Show video controls",
      "info": "Only applicable with native video.",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "v_icon",
      "label": "Video Icon"
    }
  ],
  "presets": [
    {
      "name": "preheat-video-results"
    }
  ]
}
{% endschema %}