<style>
.free-list {
  padding: 96px 0;
  background: #F4F2FF;
}

.free-list .free-list-title {
  font-size: 60px;
  font-family: var(--heading-font-family);
  line-height: 1;
  text-align: center;
}

.free-list .free-list-cont {
  display: flex;
  margin-top: 70px;
}

.free-list .free-list-item {
  flex: 1;
}

.free-list .free-list-item .img {
  width: 107px;
  display: block;
  margin: 0 auto;
}

.free-list .free-list-item-p {
  font-size: 16px;
  color: #000;
  text-align: center;
  line-height: 1.2;
  max-width: 145px;
  margin: 0 auto;
  margin-top: 20px;
}

.free-list .free-list-dot {
  display: none;
  justify-content: center;
  gap: 10px;
  margin-top: 30px;
}

.free-list .free-list-dot-item {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: #000;
  opacity: 0.2;
}

.free-list .free-list-dot-item.active {
  opacity: 1;
}

@media (max-width: 991px) {
  .free-list {
    padding: 60px 0;
    overflow: hidden;
  }
  .free-list .free-list-title {
    font-size: 28px;
  }
  .free-list .free-list-cont {
    margin-top: 40px;
    gap: 14px;
    flex-wrap: wrap;
  }
}

@media (max-width: 640px) {
  .free-list .free-list-item {
            flex-basis: calc(33.3% - 10px);
        flex-shrink: 1;
        flex-grow: 0;
  }
  .free-list .free-list-dot {
    display: flex;
  }
}
</style>
<section class="section-box">
  <div class="free-list to-top">
    <div class="container">
      <div class="free-list-title">{{ section.settings.text }}</div>
      <div class="free-list-cont">
        {%- for block in section.blocks -%}
          <div class="free-list-item">
            {%- if block.settings.image != blank -%}
              <img loading="lazy" class="img" width="{{ block.settings.image.width }}" height="{{ block.settings.image.height }}" {% render 'image-attributes', image: block.settings.image %} alt="{{ block.settings.image.alt | escape }}" >
            {%- endif -%}
            <div class="free-list-item-p">{{ block.settings.text }}</div>
          </div>
        {%- endfor -%}
      </div>
    </div>
  </div>
</section>
<script>
  // window.addEventListener('load', function () {
  //   function freeListSwiper() {
  //     let $p = $('.free-list')
  //     let $list = $p.find('.free-list-cont')
  //     let $dot = $p.find('.free-list-dot-item')
  //     let content = document.querySelector('.free-list .free-list-cont')
  //     let width = $list[0].offsetWidth
  //     let length = $dot.length
  //     let index = 0
  //     let timer = null

  //     function changeSwiper() {
  //       $list.css({ transform: `translateX(-${index * (width + 30)}px)`, transition: 'transform 0.3s ease-in' })
  //       $dot.removeClass('active').eq(index).addClass('active')
  //     }
  //     timer = setInterval(function () {
  //       index++
  //       if (index >= length) index = 0
  //       changeSwiper()
  //     }, 5 * 1000)

  //     detectSwipe(content, () => {
  //       index++
  //       if (index >= length) index = 0
  //       changeSwiper()
  //     }, () => {
  //       index--
  //       if (index < 0) index = length - 1
  //       changeSwiper()
  //     });

  //     function detectSwipe(element, onSwipeLeft, onSwipeRight) {
  //       let startX = 0;

  //       const getEventX = (event) => {
  //         return event.touches ? event.touches[0].clientX : event.clientX;
  //       };

  //       const handleTouchStart = (e) => {
  //         startX = getEventX(e);
  //       };

  //       const handleTouchMove = (e) => {
  //         const deltaX = getEventX(e) - startX;
  //         if (Math.abs(deltaX) > 10 && e.cancelable) {
  //           e.preventDefault();
  //         }
  //       };

  //       const handleTouchEnd = (e) => {
  //         const deltaX = getEventX(e.changedTouches ? e.changedTouches[0] : e) - startX;
  //         if (deltaX > 10) {
  //           onSwipeRight();
  //         } else if (deltaX < -10) {
  //           onSwipeLeft();
  //         }
  //       };

  //       element.addEventListener('touchstart', handleTouchStart);
  //       element.addEventListener('touchmove', handleTouchMove);
  //       element.addEventListener('touchend', handleTouchEnd);

  //       // Add mouse event listeners for PC compatibility
  //       element.addEventListener('mousedown', handleTouchStart);
  //       element.addEventListener('mousemove', handleTouchMove);
  //       element.addEventListener('mouseup', handleTouchEnd);
  //     }
  //   }
  //   if (window.innerWidth < 640) {
  //     freeListSwiper()
  //   }
  // })
</script>
{% schema %}
{
"name": "free-list",
"blocks": [
  {
    "name": "item",
    "type": "item",
    "settings": [
      {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
      },
      {
        "type": "text",
        "id": "text",
        "label": "Text"
      }
    ]
  }
],
"settings": [
  {
    "type": "text",
    "id": "text",
    "label": "标题"
  }
],
  "presets": [
  {
    "name": "free-list",
    "blocks": []
  }
]
}
{% endschema %}