<style>
.preheat-slide{
  padding: 100px 0  80px 0;
  background: #FBFAF4;
  overflow: hidden;
}

.preheat-slide .preheat-slide-cont{
  display: flex;
  align-items: center;
  gap: 99px;
}

.preheat-slide .preheat-slide-left{
  perspective: 1800px;
  flex: 1;
}

.preheat-slide .preheat-slide-title{
  color: #3F3636;
  font-size: 50px;
  line-height: 1.2;
  letter-spacing: -0.26px;
}

.preheat-slide .preheat-slide-text{
  color: #3F3636;
  font-size: 18px;
  line-height: 1.4;
  letter-spacing: 0.085px;
  margin-top: 30px;
}
.preheat-slide .preheat-slide-title,.preheat-slide .preheat-slide-text,.preheat-slide .preheat-slide-arraw{
  transform-style: preserve-3d;
  transition: transform .8s,opacity 1s;
  transform: translateZ(0px);
  opacity: 1;
}

.preheat-slide.active .preheat-slide-title,.preheat-slide.active .preheat-slide-text,.preheat-slide.active .preheat-slide-arraw{
  transform: translateZ(-120px);
  opacity: 0;
}

.preheat-slide .preheat-slide-arraw{
  width: 36px;
  cursor: pointer;
  margin-top: 50px;
}

.preheat-slide .preheat-slide-arraw svg{
  display: block;
  opacity: 1;
  transition: all .4s ease;
}

.preheat-slide .preheat-slide-arraw:hover svg{
  opacity: .3;
}

.preheat-slide .preheat-slide-right{
  width: calc(66.66% - 26px);
  overflow: hidden;
}

.preheat-slide.active .preheat-slide-right{
  overflow: visible;
}

.preheat-slide .preheat-slide-list{
  display: flex;
  gap: 26px;
  transition: all .8s ease;
  transition-delay:.4s;
}

.preheat-slide .preheat-slide-item{
  width: calc(50% - 13px);
  flex-shrink: 0;
  padding-top: 20px;
  border-top: 1px solid #3F3636;
}
.preheat-slide.active .preheat-slide-list{
  transform: translateX(calc(-50% - 26px));
}
.preheat-slide .preheat-slide-img{
  position: relative;
  z-index: 1;
}
.preheat-slide .img{
  display: block;
  width: 100%;
  position: relative;
  z-index: 1;
}

.preheat-slide .preheat-slide-wrapper{
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  z-index: 2;
}

.preheat-slide .preheat-slide-wrapper video{
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.preheat-slide .video-wrapper__play-button{
    position: absolute;
    margin-bottom:0;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
.preheat-slide .preheat-slide-item-title{
  color: #272724;
  font-size: 30px;
  line-height: 1.4;
  margin-top: 30px;
}

.preheat-slide .preheat-slide-item-text{
  color: #3F3636;
  font-size: 16px;
  line-height: 1.5;
  margin-top: 11px;
}

@media (max-width:1300px) {
  .preheat-slide .preheat-slide-cont{
    gap: 50px;
  }
}

@media (max-width:991px) {
  .preheat-slide{
    padding: 40px 0;
    background:#fff;
  }
  .preheat-slide .preheat-slide-left{
    display: none;
  }
  .preheat-slide .preheat-slide-right{
    width: 100%;
  }
  .preheat-slide .preheat-slide-item-title{
    font-size: 14px;
    margin-top: 20px;
  }
  .preheat-slide .preheat-slide-item-text{
    font-size: 12px;
    color: rgba(63, 54, 54, 1);
    margin-top: 10px;
  }
  .preheat-slide .preheat-slide-list{
    gap: 10px;
  }
  .preheat-slide .preheat-slide-item{
    min-width: 300px;
  }
  .preheat-slide .video-wrapper__play-button{
    zoom:.6;
  }
  .preheat-slide .preheat-slide-cont{
    flex-direction: column;
    gap:40px;
  }
  .preheat-slide .preheat-slide-title{
    font-size: 24px;
  }
  .preheat-slide .preheat-slide-text{
    font-size: 14px;
    margin-top:10px;
  }
  .hair-ads-slide .preheat-slide-left{
    display:block;
  }
  .hair-ads-slide .preheat-slide-right{
    overflow: visible;
  }
  .hair-ads-slide {
    overflow:hidden;
  }
}
</style>

<section class="section-box">
  <div class="preheat-slide {{ section.settings.text2 }}" style="background:{{ section.settings.bg_color }}">
    <div class="container">
      <div class="preheat-slide-cont to-top">
        <div class="preheat-slide-left">
          <div class="preheat-slide-title line-top"> {{ section.settings.text }} </div>
          <div class="preheat-slide-text line-top">{{ section.settings.text1 }}</div>
          {%- if section.blocks.size > 2 -%}
            <div class="preheat-slide-arraw">
              <svg xmlns="http://www.w3.org/2000/svg" width="36" height="27" viewBox="0 0 36 27" fill="none">
                <g clip-path="url(#clip0_860_8658)">
                  <path d="M36 13.5094C36 13.7228 35.9192 13.9344 35.7647 14.0961L23.472 26.9983L22.1883 25.825L33.1024 14.3696H0C0 13.42 0.786732 12.6493 1.7561 12.6493H35.0816C35.4135 12.6493 35.7366 12.8127 35.8946 13.1C35.9666 13.229 36 13.3701 36 13.5094Z" fill="#190A0A"/>
                  <path d="M34.1635 10.4938C33.4769 11.1647 32.3653 11.1647 31.6804 10.4938L22.208 1.21625L23.4496 0L34.1618 10.4938H34.1635Z" fill="#190A0A"/>
                </g>
                <defs>
                  <clipPath id="clip0_860_8658">
                    <rect width="36" height="27" fill="white"/>
                  </clipPath>
                </defs>
              </svg>
            </div>
          {%- endif -%}             
                    
        </div>
        <div class="preheat-slide-right">
          <div class="preheat-slide-list">
            {%- for block in section.blocks -%}
              <div class="preheat-slide-item to-top">
                <div class="preheat-slide-img">
                 {%- if block.settings.image != blank -%}
                  <img
                    loading="lazy"
                    class="img"
                    width="{{ block.settings.image.width }}"
                    height="{{ block.settings.image.height }}"
                    {% render 'image-attributes', image: block.settings.image %}
                    alt="{{ block.settings.image.alt | escape }}"
                  >
                {%- endif -%}
                {%- if block.settings.video != blank -%}
                  <native-video {% if block.settings.autoplay %}autoplay{% endif %} class="preheat-slide-wrapper">
                    {%- unless block.settings.autoplay -%}
                      <button type="button" class="video-wrapper__play-button video-wrapper__play-button--large video-wrapper__play-button--ripple" title="{{ 'general.accessibility.play_video' | t | escape }}">
                        {%- if block.settings.v_icon != blank -%}
                          <img
                            loading="lazy"
                            class="v_img"
                            width="{{ block.settings.v_icon.width }}"
                            height="{{ block.settings.v_icon.height }}"
                            {% render 'image-attributes', image: block.settings.v_icon %}
                            alt="{{ block.settings.v_icon.alt | escape }}"
                          >
                        {%- endif -%}
                      </button>
                    {%- endunless -%}
                    <template>
                      {{- block.settings.video | video_tag: controls: block.settings.show_video_controls, autoplay: block.settings.autoplay, muted: block.settings.autoplay, playsinline: block.settings.autoplay, loop: true -}}
                    </template>
                  </native-video>
                {%- endif -%}
                </div>
                <div class="preheat-slide-item-title line-top">{{ block.settings.text }}</div>
                <div class="preheat-slide-item-text line-top">{{ block.settings.text1 }}</div>
              </div>
            {%- endfor -%}
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<script>
  window.addEventListener('load', function() {
    if(document.querySelector('.preheat-slide .preheat-slide-arraw')){
      document.querySelector('.preheat-slide .preheat-slide-arraw').addEventListener('click', function() {
        document.querySelector('.preheat-slide').classList.add('active')
      })
    }
    
    function preheatSlideSwiper(){
      let $p = $('.preheat-slide')
      let $list = $p.find('.preheat-slide-list')
      const content = document.querySelector('.preheat-slide .preheat-slide-right');
      let length = $list.find('.preheat-slide-item').length
      let width = $list.find('.preheat-slide-item')[0].offsetWidth
      let index = 0
      let pWidth = $p[0].offsetWidth
      let marginW = 10
      let lWidth = length * (width + marginW) + $list[0].offsetLeft
      let translateX = 0

      function changeTransform(num){
        translateX += (width + marginW) * num
        if(translateX > lWidth - pWidth) {
          translateX = lWidth - pWidth
        }
        if(translateX<0) translateX = 0
        $list.css({
          transform: 'translateX(-' + translateX + 'px)',
          transition: 'all 1s cubic-bezier(0.645, 0.045, 0.355, 1) 0s'
        })
      }
      detectSwipe(content, () => {
        changeTransform(1)
      }, () => {
        changeTransform(-1)
      });

      function detectSwipe(element, onSwipeLeft, onSwipeRight) {
      let startX = 0;

      const getEventX = (event) => {
        return event.touches ? event.touches[0].clientX : event.clientX;
      };

      const handleTouchStart = (e) => {
        startX = getEventX(e);
      };

      const handleTouchMove = (e) => {
        const deltaX = getEventX(e) - startX;
        if (Math.abs(deltaX) > 10 && e.cancelable) {
          e.preventDefault();
        }
      };

      const handleTouchEnd = (e) => {
        const deltaX = getEventX(e.changedTouches ? e.changedTouches[0] : e) - startX;
        if (deltaX > 10) {
          onSwipeRight();
        } else if (deltaX < -10) {
          onSwipeLeft();
        }
      };

      element.addEventListener('touchstart', handleTouchStart);
      element.addEventListener('touchmove', handleTouchMove);
      element.addEventListener('touchend', handleTouchEnd);

      // Add mouse event listeners for PC compatibility
      element.addEventListener('mousedown', handleTouchStart);
      element.addEventListener('mousemove', handleTouchMove);
      element.addEventListener('mouseup', handleTouchEnd);
    }
    }
    if(window.innerWidth < 991) {
      preheatSlideSwiper()
    }
  })
</script>
{% schema %}
{
  "name": "preheat-slide",
  "settings": [
    {
      "type": "text",
      "id": "text",
      "label": "Title"
    },
    {
      "type": "text",
      "id": "text1",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text2",
      "label": "自定义Class"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "背景颜色",
      "default": "#ffffff"
    }
  ],
  "blocks": [
    {
        "type": "item",
        "name": "item",
        "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
          {
            "type": "video",
            "id": "video",
            "label": "Video",
            "info": "Replaces the external video if both are set."
          },
          {
            "type": "text",
            "id": "text",
            "label": "Text"
          },
          {
            "type": "text",
            "id": "text1",
            "label": "Text"
          },
          {
            "type": "checkbox",
            "id": "autoplay",
            "label": "Autoplay",
            "info": "Video is muted automatically to allow autoplay.",
            "default": true
          },
          {
            "type": "checkbox",
            "id": "show_video_controls",
            "label": "Show video controls",
            "info": "Only applicable with native video.",
            "default": false
          },
          {
            "type": "image_picker",
            "id": "v_icon",
            "label": "Video Icon"
          }
        ]
      }
  ],
  "presets": [
    {
      "name": "preheat-slide",
      "settings": {},
      "blocks": [
      ]
    }
  ]
}
{% endschema %}